% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuneandtrainIntSVM.R
\name{tuneandtrainIntSVM}
\alias{tuneandtrainIntSVM}
\title{Tune and Train Internal SVM}
\usage{
tuneandtrainIntSVM(
  data,
  kernel = "linear",
  cost_seq = 2^(-15:15),
  scale = FALSE,
  nfolds = 5,
  seed = 123
)
}
\arguments{
\item{data}{A data frame containing the training data. The first column should be the response variable (factor), 
and the remaining columns should be the predictor variables.}

\item{kernel}{A character string specifying the kernel type to be used in the SVM. Default is "linear".}

\item{cost_seq}{A numeric vector of cost values to be evaluated. Default is `2^(-15:15)`.}

\item{scale}{A logical indicating whether to scale the predictor variables. Default is FALSE.}

\item{nfolds}{An integer specifying the number of folds for cross-validation. Default is 5.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is 123.}
}
\value{
A list containing the best cost value (`best_cost`), the final trained model (`best_model`), 
  and the AUC on the training data (`final_auc`).
}
\description{
This function tunes and trains an SVM classifier using internal cross-validation. The function evaluates 
different cost values and selects the best model based on AUC (Area Under the Curve).
}
\examples{
\dontrun{
# Load sample data
data(sample_data_train)

# Example usage
result <- tuneandtrainIntSVM(
  sample_data_train,
  kernel = "linear",
  cost_seq = 2^(-15:15),
  scale = FALSE,
  nfolds = 5,
  seed = 123
)
result$best_cost
result$best_model
result$final_auc
}
}
